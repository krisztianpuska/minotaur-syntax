@import "syntax-variables";

atom-text-editor,
:host {
	background-color: @darkest;
	color: @light;

	.invisible-character {
		background-color: transparent;
		color: @gray;
	}

	// Indent lines
	.indent-guide { color: @dark; }

	// Numbers
	.gutter {
		color: @gray;

		.cursor-line {
			color: @light;
			background: @black;
		}
	}

	// TODO It might break things
	// .gutter[gutter-name="linter"] { min-width: 0; }

	// There is a selection in this line
	.line-number.cursor-line-no-selection { background: @black; }

	// Current line
	.cursor-line { background-color: @black; }

	// TODO
	// .line { box-shadow: inset 0 1px 0 0 fade(@lightest, 1%); }

	.bracket-matcher .region {
		border-bottom: 0;
		box-shadow: 0 1px 0 0 @green-color;
	}

	.invisible { color: @gray; }
	.cursor { border-color: @lightest; }
	.selection .region { background-color: @black; }

	// Reset trailing whitespace
	.line .trailing-whitespace { background-color: transparent; }

	.entity.other.attribute-name { font-style: italic; }

	.search-results .marker .region {
		background-color: transparent;
		border: 1px solid @gray;
	}

	.search-results .marker.current-result .region { border: 1px solid @gray; }

	// TODO
	.gfm {
		.markup {
			&.heading {
				color: @green-color;

				font-weight: bold;
			}

			&.underline {
				color: @yellow-color;

				text-decoration: underline;
			}
		}

		.bold { font-weight: bold; }
		.italic { font-style: italic; }
		.raw { color: @blue-color; }

		.variable.list {
			color: @pink-color;

			font-weight: bold;
		}

		.link {
			color: @lightest;

			.entity { color: @purple-color; }
		}
	}
}

.comment { color: @gray; }

// TODO
.constant {
	&.numeric,
	&.language,
	&.character,
	&.escape,
	&.other { color: @purple-color; }

	&.type {
		font-style: italic;
		color: @blue-color;
	}
}

// TODO
.entity {
	&.name.class {
		text-decoration: none;
		color: @green-color;
	}

	&.other.inherited-class {
		font-style: italic;
		text-decoration: none;
		color: @green-color;
	}

	&.name.function { color: @green-color; }
	&.name.instance { color: @blue-color; }
	&.name.tag { color: @pink-color; }
	&.other.attribute-name { color: @green-color; }
}

// TODO
.invalid {
	background-color: @pink-color;
	color: @lightest;

	&.deprecated {
		color: @lightest;
		background-color: @purple-color;
	}
}

// TODO
.keyword {
	color: @pink-color;

	&.operator.bracket,
	&.operator.punctuation {
		color: @gray;
	}
}

// TODO
.leading-whitespace,
.trailing-whitespace { display: inline-block; }

// TODO
.meta {
	&.class {
		color: @lightest;

		&.body { color: @light; }
	}

	&.method-call,
	&.method { color: @light; }

	&.definition.variable { color: @red-color; }

	&.link { color: @lightest; }
	&.require { color: @blue-color; }
	&.selector { color: @purple-color; }

	&.separator {
		background-color: @gray;
		color: @gray;
	}

	&.tag { color: @gray; }
}

// TODO
.punctuation {
	&.definition {
		&.comment { color: @gray; }

		&.method-parameters,
		&.function-parameters,
		&.parameters,
		&.separator,
		&.seperator,
		&.array {
			color: @light;
		}

		&.heading,
		&.identity {
			color: @blue-color;
		}

		&.bold {
			color: @lightest;
			font-weight: bold;
		}

		&.italic {
			color: @purple-color;
			font-style: italic;
		}
	}

	&.section {
		&.embedded { color: @red-color; }

		&.method,
		&.class,
		&.inner-class { color: @gray; }
	}
}

// TODO
.support {
	&.constant { color: @blue-color; }
	&.function {
		color: @blue-color;

		&.any-method { color: @blue-color; }
	}

	&.function.decl { color: @green-color; }

	&.type,
	&.class {
		color: @blue-color;

		font-style: italic;
	}
}

// TODO
.storage {
	color: @pink-color;

	&.type {
		color: @blue-color;

		font-style: italic;
	}
}

// TODO
.string {
	color: @yellow-color;

	&.regexp {
		color: @blue-color;

		.source.ruby.embedded { color: @lightest; }
	}

	&.other.link { color: @red-color; }
}

// TODO
.variable {
	color: @lightest;

	&.interpolation { color: @purple-color; }
	&.parameter {
		color: @purple-color;

		font-style: italic;
	}

	&.language.js { color: @pink-color; }
}
